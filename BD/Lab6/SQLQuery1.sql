--#1--lab6
	SELECT AUDITORIUM.AUDITORIUM_TYPE,--AUDITORIUM.AUDITORIUM_CAPACITY,
		MAX(AUDITORIUM_CAPACITY)[AUDITORIUM_CAPACITY_MAX],
		MIN(AUDITORIUM_CAPACITY)[AUDITORIUM_CAPACITY_MIN],
		AVG(AUDITORIUM_CAPACITY)[AUDITORIUM_CAPACITY_AVG],
		SUM(AUDITORIUM_CAPACITY)[AUDITORIUM_CAPACITY_SUM]
	FROM AUDITORIUM 
	INNER JOIN AUDITORIUM_TYPE
		ON AUDITORIUM_TYPE.AUDITORIUM_TYPE=AUDITORIUM.AUDITORIUM_TYPE
			GROUP BY AUDITORIUM.AUDITORIUM_TYPE
--#2
	SELECT AUDITORIUM.AUDITORIUM_TYPE,
		MAX(AUDITORIUM_CAPACITY)[AUDITORIUM_CAPACITY_MAX],
		MIN(AUDITORIUM_CAPACITY)[AUDITORIUM_CAPACITY_MIN],
		AVG(AUDITORIUM_CAPACITY)[AUDITORIUM_CAPACITY_AVG],
		SUM(AUDITORIUM_CAPACITY)[AUDITORIUM_CAPACITY_SUM]
	FROM AUDITORIUM
	INNER JOIN AUDITORIUM_TYPE
		ON AUDITORIUM_TYPE.AUDITORIUM_TYPE=AUDITORIUM.AUDITORIUM_TYPE
			GROUP BY AUDITORIUM.AUDITORIUM_TYPE
--#3
	SELECT [ГРУПЫ_ОЦЕНОК],[КОЛИЧЕСТВО]
	FROM (SELECT 
			CASE
				WHEN NOTE BETWEEN 1 AND 4 THEN '1<NOTE<=4'
				WHEN NOTE = 5 THEN 'NOTE =5'
				ELSE 'NOTE>5'
			END[ГРУПЫ_ОЦЕНОК],
			COUNT(*)[КОЛИЧЕСТВО]
			FROM PROGRESS GROUP BY 
			CASE
				WHEN NOTE BETWEEN 1 AND 4 THEN '1<NOTE<=4'
				WHEN NOTE = 5 THEN 'NOTE =5'
				ELSE 'NOTE>5'
			END)[T]
				ORDER BY 
				CASE[ГРУПЫ_ОЦЕНОК]
					WHEN '1<NOTE<=4' THEN 3
					WHEN 'NOTE=5' THEN 4
					ELSE 5
				END	
--#4
	--Добавление колонки с COURSE(курс, вычисляемое поле,  tinyint, вычисляется на основе текущей даты и значения YEAR_FIRST)
	ALTER TABLE dbo.GROUPS
		ADD COURSE AS (2014-GROUPS.YEAR_FIRST);
	-----------------------------------------------------------------------------------------
	
	SELECT GROUPS.COURSE,GROUPS.PROFESSION,FACULTY.FACULTY,
	ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))),2)[AVG_MARK]
	FROM GROUPS
	INNER JOIN STUDENT
		ON STUDENT.IDGROUP=GROUPS.IDGROUP
	INNER JOIN PROGRESS
		ON PROGRESS.IDSTUDENT=STUDENT.IDSTUDENT
	INNER JOIN FACULTY
		ON FACULTY.FACULTY = GROUPS.FACULTY
	GROUP BY GROUPS.COURSE,FACULTY.FACULTY,GROUPS.PROFESSION
	ORDER BY AVG_MARK DESC
--#5
	SELECT GROUPS.COURSE,GROUPS.PROFESSION,FACULTY.FACULTY,
	ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))),2)[AVG_MARK]
	FROM GROUPS
	INNER JOIN STUDENT
		ON STUDENT.IDGROUP=GROUPS.IDGROUP
	INNER JOIN PROGRESS
		ON PROGRESS.IDSTUDENT=STUDENT.IDSTUDENT
	INNER JOIN FACULTY
		ON FACULTY.FACULTY = GROUPS.FACULTY
	WHERE PROGRESS.SUBJECT ='БД' OR PROGRESS.SUBJECT ='ОАиП'
	GROUP BY GROUPS.COURSE,GROUPS.PROFESSION,FACULTY.FACULTY
	ORDER BY AVG_MARK DESC
--#6
	SELECT PROGRESS.SUBJECT,GROUPS.PROFESSION,
	ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))),2)[AVG_MARK]
	FROM GROUPS,FACULTY,PROGRESS
		WHERE FACULTY.FACULTY like 'ТОВ'
	GROUP BY PROGRESS.SUBJECT,GROUPS.PROFESSION
	ORDER BY AVG_MARK DESC
--#7
	SELECT P1.SUBJECT,P1.NOTE,
	COUNT(*)[NUMBER]
	FROM PROGRESS P1
	GROUP BY P1.SUBJECT,P1.NOTE
		HAVING P1.NOTE=8 OR P1.NOTE=9