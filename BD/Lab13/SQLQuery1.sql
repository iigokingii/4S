--lab13
DROP PROCEDURE PSUBJECT;
--#1
	GO
		CREATE PROCEDURE PSUBJECT
		  AS
		  BEGIN
				DECLARE @K INT = (SELECT COUNT(*) FROM SUBJECT);
				SELECT * FROM SUBJECT;
				RETURN @K
		  END;
	GO
		DECLARE @K int = 0;
		EXEC @K = PSUBJECT
		PRINT 'NUMBER OF ROWS: '+CAST(@K AS NVARCHAR(20));
--#2
	GO
		ALTER PROCEDURE PSUBJECT 
		 @P VARCHAR(20)=NULL,
		 @C INT OUTPUT
		   AS
		   BEGIN
					DECLARE @K INT = (SELECT COUNT(*) FROM SUBJECT);
					SELECT *FROM SUBJECT WHERE SUBJECT.PULPIT = @P;
					SET @C = @@ROWCOUNT;
					RETURN @K
		   END
	GO
		DECLARE @K INT =0, @R INT =0, @P VARCHAR(20) ,@C INT;
		EXEC @K = PSUBJECT @P = 'ИСиТ',@C = @R OUTPUT;
		PRINT 'Количество строк в результирующем наборе:'+ CONVERT(NVARCHAR(20),@C);
		PRINT 'Общее количество дисциплин:'+CAST(@K AS NVARCHAR(20));

--#3
	GO
		ALTER PROCEDURE PSUBJECT 
		 @P VARCHAR(20)=NULL
		   AS
		   BEGIN
			DECLARE @K INT = (SELECT COUNT(*) FROM SUBJECT);
			SELECT *FROM SUBJECT WHERE SUBJECT.PULPIT = @P;
			RETURN @K
		   END
	GO
		CREATE TABLE #SUBJECT (
			SUBJECT CHAR(10),
			SUBJECT_NAME VARCHAR(100),
			PULPIT CHAR(20)
		)
		INSERT #SUBJECT EXEC PSUBJECT @P='ИСиТ'
		SELECT *FROM #SUBJECT

--#4
	CREATE TABLE #TEMP_AUDITORIUM(
		AUDITORIUM CHAR(20) PRIMARY KEY,
		AUDITORIUM_TYPE CHAR(10),
		AUDITORIUM_CAPACITY INT,
		AUDITROIUM_NAME VARCHAR(50)
	)
	SELECT *FROM #TEMP_AUDITORIUM

	GO
		CREATE PROCEDURE PAUDITORIUM_INSERT 
			@A CHAR(20),
			@N VARCHAR(50),
			@C INT = 0,
			@T CHAR(10)
		AS DECLARE @RC INT = 1;
		BEGIN TRY
		 INSERT INTO #TEMP_AUDITORIUM VALUES (@A,@N,@C,@T)
		 RETURN @RC;
		END TRY
		BEGIN CATCH
		 PRINT 'ERROR NUMBER: '+CAST(ERROR_NUMBER() AS VARCHAR(6));
		 PRINT 'MESSAGE :' + ERROR_MESSAGE();
		 PRINT 'Уровень :' + CAST(ERROR_SEVERITY() AS VARCHAR(6));
		 PRINT 'МЕТКА : ' + CAST(ERROR_STATE() AS VARCHAR(8));
		 PRINT 'НОМЕР СТРОКИ :'+CAST(ERROR_LINE() AS VARCHAR(8));
		 IF(ERROR_PROCEDURE() IS NOT NULL)
		  PRINT 'NAME OF PROCEDURE: ' + ERROR_PROCEDURE();
		 RETURN -1;
		END CATCH

	GO
		DECLARE @RC INT;
		EXEC @RC = PAUDITORIUM_INSERT @A ='301-2',@N = 'LK-K',@C = 98, @T = '301-2'
		PRINT 'КОД ОШИБКИ:'+CAST(@RC AS VARCHAR(3));
		SELECT *FROM #TEMP_AUDITORIUM
	--#5
	DROP PROCEDURE SUBJECT_REPORT
	GO
		CREATE PROCEDURE SUBJECT_REPORT
		 @P CHAR(10)
		 AS 
			DECLARE @RC INT =0;
			BEGIN TRY
			 DECLARE @REPORT CHAR(300) = '',@TEMP CHAR(40);
			 DECLARE CURS CURSOR 
					FOR 
				SELECT SUBJECT_NAME FROM SUBJECT WHERE PULPIT = @P;
				IF(NOT EXISTS (SELECT SUBJECT_NAME FROM SUBJECT WHERE PULPIT = @P))
					RAISERROR('ОШИБКА',11,1) --серьезность
				ELSE
					OPEN CURS
					FETCH CURS INTO @TEMP
					WHILE @@FETCH_STATUS =0
					BEGIN
					  SET @REPORT = RTRIM(@TEMP)+', '+@REPORT;
					  SET @RC +=1; 
					  FETCH CURS INTO @TEMP
					END;
				PRINT 'выведены краткие названия (поле SUBJECT) из табли-цы SUBJECT в одну строку через запятую: '+ @REPORT;
				CLOSE CURS
				RETURN @RC
			END TRY
			BEGIN CATCH 
				PRINT 'ОШИБКА В ПАРАМЕТРАХ';
				IF(ERROR_PROCEDURE() IS NOT NULL)
					PRINT 'ИМЯ ПРОЦЕДУРЫ: '+ERROR_PROCEDURE();
				RETURN @RC;
			END CATCH

	GO
	DECLARE @RC INT;
	EXEC @RC = SUBJECT_REPORT @P = 'ИСиТ'
	PRINT 'NUMBER OF DISCIPLINES: '+CAST(@RC AS NVARCHAR(29));
	--#6
	CREATE TABLE #TEMP_AUDITORIUM_TYPE(
		AUDITORIUM_TYPE CHAR(10) PRIMARY KEY,
		AUDITORIUM_TYPENAME VARCHAR(50)
	)


	GO
	CREATE PROCEDURE PAUDITORIUM_INSERTX
      @A CHAR(20),		--AUDITORIUM
	  @N VARCHAR(50),		--TYPE
	  @C INT = 0,				--CAPACITY
	  @T CHAR(10),			--AUDITORIUM_TYPE.AUDITORIUM_TYPE
	  @TN VARCHAR(50)		--AUDITORIUM_TYPE.AUDITORIUM_TYPENAME
	  AS
		DECLARE @RC INT = 1;
		BEGIN TRY
			BEGIN TRAN
			  INSERT INTO #TEMP_AUDITORIUM_TYPE
				VALUES (@T,@TN)
			 EXEC @RC = PAUDITORIUM_INSERT @A=@A, @N=@N, @C=@C, @T=@T;
			COMMIT TRAN;
			RETURN @RC;
		END TRY
		BEGIN CATCH
		 PRINT 'ERROR NUMBER: '+CAST(ERROR_NUMBER() AS VARCHAR(6));
		 PRINT 'MESSAGE :' + ERROR_MESSAGE();
		 PRINT 'Уровень :' + CAST(ERROR_SEVERITY() AS VARCHAR(6));
		 PRINT 'МЕТКА : ' + CAST(ERROR_STATE() AS VARCHAR(8));
		 PRINT 'НОМЕР СТРОКИ :'+CAST(ERROR_LINE() AS VARCHAR(8));
		 IF(ERROR_PROCEDURE() IS NOT NULL)
		  PRINT 'NAME OF PROCEDURE: ' + ERROR_PROCEDURE();
		 IF (@@TRANCOUNT>0)
		  ROLLBACK TRAN;
		 RETURN -1;
		END CATCH
	GO
		DECLARE @RC INT;
		EXEC @RC = PAUDITORIUM_INSERTX @A ='303-2',@N = 'LK-K',@C = 98, @T = '303-2',@TN = 'Компьютерный класс';
		PRINT '@RC = ' + CAST (@RC AS VARCHAR(3))
	SELECT * FROM #TEMP_AUDITORIUM;
	SELECT * FROM #TEMP_AUDITORIUM_TYPE;